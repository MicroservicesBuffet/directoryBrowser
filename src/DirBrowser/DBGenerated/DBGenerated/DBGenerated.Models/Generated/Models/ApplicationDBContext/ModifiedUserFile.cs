//this was autogenerated by a tool. Do not modify! Use partial
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using GeneratorFromDB;
using Microsoft.EntityFrameworkCore;

namespace Generated;

//ADDED by code generator
public interface I_ModifiedUserFile_Table 
{
        long IDUser { get; set; }
                long IDFile { get; set; }
                DateTime ModifiedDate { get; set; }
                long ID { get; set; }
                string Contents { get; set; }
        }

public class ModifiedUserFile_Table : I_ModifiedUserFile_Table
{
    public static MetaTable metaData = new("ModifiedUserFile");
    static ModifiedUserFile_Table (){
        MetaColumn mc=null;
        mc=new ("IDUser","long",false);                
        mc.IsPk = false ;
        mc.TypeJS = "number";
        metaData.AddColumn(mc);
        mc=new ("IDFile","long",false);                
        mc.IsPk = false ;
        mc.TypeJS = "number";
        metaData.AddColumn(mc);
        mc=new ("ModifiedDate","DateTime",false);                
        mc.IsPk = false ;
        mc.TypeJS = "Date";
        metaData.AddColumn(mc);
        mc=new ("ID","long",false);                
        mc.IsPk = true ;
        mc.TypeJS = "number";
        metaData.AddColumn(mc);
        mc=new ("Contents","string",false);                
        mc.IsPk = false ;
        mc.TypeJS = "string";
        metaData.AddColumn(mc);
 //done with foreach property in static constructor
    }
        public long IDUser { get; set; }
                public long IDFile { get; set; }
                public DateTime ModifiedDate { get; set; }
                public long ID { get; set; }
                public string Contents { get; set; }
             public void CopyFrom(I_ModifiedUserFile_Table other)  {
        this.IDUser = other.IDUser;
                this.IDFile = other.IDFile;
                this.ModifiedDate = other.ModifiedDate;
                this.ID = other.ID;
                this.Contents = other.Contents;
            }

    public static explicit operator ModifiedUserFile_Table?(ModifiedUserFile obj) { 
        if(obj == null)
            return null;
            //System.Diagnostics.Debugger.Break();
         var ret= new ModifiedUserFile_Table();
         ret.CopyFrom(obj as I_ModifiedUserFile_Table );
         return ret;
     }
     public static explicit operator ModifiedUserFile?(ModifiedUserFile_Table obj) { 
        if(obj == null)
            return null;
            //System.Diagnostics.Debugger.Break();
         var ret= new ModifiedUserFile();
         ret.CopyFrom(obj as I_ModifiedUserFile_Table) ;
         return ret;
     }



}
public partial class ModifiedUserFile : I_ModifiedUserFile_Table
{
     public void CopyFrom(I_ModifiedUserFile_Table other)  {
        this.IDUser = other.IDUser;
                this.IDFile = other.IDFile;
                this.ModifiedDate = other.ModifiedDate;
                this.ID = other.ID;
                this.Contents = other.Contents;
            }

}

//for ModifiedUserFile 
public enum eModifiedUserFileColumns {
    None = 0
        ,IDUser 
                ,IDFile 
                ,ModifiedDate 
                ,ID 
                ,Contents 
        }

//finish ADDED by code generator


public partial class ModifiedUserFile
{
    public long IDUser { get; set; }

    public long IDFile { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime ModifiedDate { get; set; }

    [Key]
    public long ID { get; set; }

    [Unicode(false)]
    public string Contents { get; set; } = null!;

    [ForeignKey("IDFile")]
    [InverseProperty("ModifiedUserFile")]
    public virtual ModifiedFile IDFileNavigation { get; set; } = null!;

    [ForeignKey("IDUser")]
    [InverseProperty("ModifiedUserFile")]
    public virtual ModifiedUser IDUserNavigation { get; set; } = null!;
}


