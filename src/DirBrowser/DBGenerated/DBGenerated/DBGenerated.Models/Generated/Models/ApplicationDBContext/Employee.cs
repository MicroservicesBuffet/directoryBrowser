//this was autogenerated by a tool. Do not modify! Use partial
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using GeneratorFromDB;
using Microsoft.EntityFrameworkCore;

namespace Generated;

//ADDED by code generator
public interface I_Employee_Table 
{
        long IDEmployee { get; set; }
                string Name { get; set; }
                long IDDepartment { get; set; }
                long Salary { get; set; }
        }

public class Employee_Table : I_Employee_Table
{
    public static MetaTable metaData = new("Employee");
    static Employee_Table (){
        MetaColumn mc=null;
        mc=new ("IDEmployee","long",false);                
        mc.IsPk = true ;
        mc.TypeJS = "number";
        metaData.AddColumn(mc);
        mc=new ("Name","string",false);                
        mc.IsPk = false ;
        mc.TypeJS = "string";
        metaData.AddColumn(mc);
        mc=new ("IDDepartment","long",false);                
        mc.IsPk = false ;
        mc.TypeJS = "number";
        metaData.AddColumn(mc);
        mc=new ("Salary","long",false);                
        mc.IsPk = false ;
        mc.TypeJS = "number";
        metaData.AddColumn(mc);
 //done with foreach property in static constructor
    }
        public long IDEmployee { get; set; }
                public string Name { get; set; }
                public long IDDepartment { get; set; }
                public long Salary { get; set; }
             public void CopyFrom(I_Employee_Table other)  {
        this.IDEmployee = other.IDEmployee;
                this.Name = other.Name;
                this.IDDepartment = other.IDDepartment;
                this.Salary = other.Salary;
            }

    public static explicit operator Employee_Table?(Employee obj) { 
        if(obj == null)
            return null;
            //System.Diagnostics.Debugger.Break();
         var ret= new Employee_Table();
         ret.CopyFrom(obj as I_Employee_Table );
         return ret;
     }
     public static explicit operator Employee?(Employee_Table obj) { 
        if(obj == null)
            return null;
            //System.Diagnostics.Debugger.Break();
         var ret= new Employee();
         ret.CopyFrom(obj as I_Employee_Table) ;
         return ret;
     }



}
public partial class Employee : I_Employee_Table
{
     public void CopyFrom(I_Employee_Table other)  {
        this.IDEmployee = other.IDEmployee;
                this.Name = other.Name;
                this.IDDepartment = other.IDDepartment;
                this.Salary = other.Salary;
            }

}

//for Employee 
public enum eEmployeeColumns {
    None = 0
        ,IDEmployee 
                ,Name 
                ,IDDepartment 
                ,Salary 
        }

//finish ADDED by code generator


public partial class Employee
{
    [Key]
    public long IDEmployee { get; set; }

    [StringLength(100)]
    [Unicode(false)]
    public string Name { get; set; } = null!;

    public long IDDepartment { get; set; }

    public long Salary { get; set; }

    [ForeignKey("IDDepartment")]
    [InverseProperty("Employee")]
    public virtual Department IDDepartmentNavigation { get; set; } = null!;
}


